---
name: Linter

on:
  workflow_call:
    inputs:
      runs-on:
        description: The type of runner to use
        required: false
        type: string
        default: ubuntu-latest

concurrency:
  group: ${{ format('{0}-{1}-{2}-{3}-{4}', github.workflow, github.event_name, github.ref, github.base_ref, github.head_ref) }}
  cancel-in-progress: true

env:
  DEBUG: ${{ secrets.ACTIONS_RUNNER_DEBUG || vars.ACTIONS_RUNNER_DEBUG || secrets.ACTIONS_STEP_DEBUG || vars.ACTIONS_STEP_DEBUG || false }}

jobs:
  linter:
    name: ‚úîÔ∏è Linter
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && !github.event.pull_request.draft && !contains(fromJSON('["closed", "converted_to_draft"]'), github.event.action)) }}
    runs-on: ${{ inputs.runs-on }}
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: ü©∫ Debug
        if: ${{ env.DEBUG == 'true' }}
        uses: raven-actions/debug@v1
        with:
          vars-context: ${{ toJson(vars) }}
          secrets-context: ${{ toJson(secrets) }}
          needs-context: ${{ toJson(needs) }}
          inputs-context: ${{ toJson(inputs) }}

      # - name: üîë Get GitHub Token
      #   uses: actions/create-github-app-token@a0de6af83968303c8c955486bf9739a57d23c7f1 # v1.10.0
      #   id: get-token
      #   with:
      #     app-id: ${{ secrets.ORG_BOT_APP_ID }}
      #     private-key: ${{ secrets.ORG_BOT_PRIVATE_KEY }}
      - name: ‚§µÔ∏è Checkout
        uses: actions/checkout@v4
        # with:
        #   token: ${{ steps.get-token.outputs.token }}

      - name: üîÅ Detect changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          # token: ${{ steps.get-token.outputs.token }}
          list-files: shell
          filters: |
            gh-workflows:
              - '.github/workflows/**'
            md:
              - '**/*.md'
            changed:
              - '**'

      - name: üöß Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: üöß Install pre-commit
        run: python3 -m pip install --upgrade pre-commit

      - name: üöÖ Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: ‚úîÔ∏è Run pre-commit
        run: pre-commit run --show-diff-on-failure --color always ${{ (github.event_name == 'pull_request' && format('--files {0}', steps.changes.outputs.changed_files)) || '--all-files' }}
        env:
          SKIP: ${{ (github.event_name == 'push' && 'no-commit-to-branch,pre-commit-autoupdate') || 'pre-commit-autoupdate' }}

      - name: ‚úîÔ∏è Run actionlint
        if: ${{ steps.changes.outputs.gh-workflows == 'true' }}
        uses: raven-actions/actionlint@v1
        with:
          flags: "-ignore SC2086"

      - name: ‚öôÔ∏è Get config (lychee)
        if: ${{ steps.changes.outputs.md == 'true' }}
        run: |
          mkdir -p $(dirname "${CONFIG_FILE}")
          gh api -H "Accept: application/vnd.github.raw" "/repos/${REPO_OWNER}/.workflows/contents/${CONFIG_FILE}" > "${CONFIG_FILE}"
        env:
          GITHUB_TOKEN: ${{ github.token }}
          REPO_OWNER: ${{ github.repository_owner }}
          CONFIG_FILE: .github/linters/.lychee.toml

      - name: üåê Run lychee (markdown links)
        if: ${{ steps.changes.outputs.md == 'true' }}
        uses: lycheeverse/lychee-action@2b973e86fc7b1f6b36a93795fe2c9c6ae1118621 # v1.10.0
        with:
          args: --config ".github/linters/.lychee.toml" --no-progress ${{ steps.changes.outputs.md_files }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # - name: üåê Markdown Links
      #   if: ${{ steps.changes.outputs.md == 'true' }}
      #   uses: gaurav-nelson/github-action-markdown-link-check@v1
      #   with:
      #     config-file: .github/linters/.markdown-link-check.json
