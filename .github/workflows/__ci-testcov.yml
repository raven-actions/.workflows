---
name: CI
on:
  workflow_call:
    inputs:
      debug:
        type: string
        description: Debug mode
        required: false
        
# Allow one concurrent
concurrency:
  group: ${{ format('{0}-{1}-{2}-{3}-{4}', github.workflow, github.event_name, github.ref, github.base_ref, github.head_ref) }}
  cancel-in-progress: true

env:
  DEBUG: ${{ inputs.debug || secrets.ACTIONS_RUNNER_DEBUG || vars.ACTIONS_RUNNER_DEBUG || secrets.ACTIONS_STEP_DEBUG || vars.ACTIONS_STEP_DEBUG || false }}

jobs:
  build-test:
    name: 🏗️🧪 Build and Test
    if: ${{ contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) || (github.event_name == 'pull_request' && !github.event.pull_request.draft) }}
#     permissions:
#       contents: read
#       issues: read
#       checks: write
#       pull-requests: write
#       actions: write
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🩺 Debug
        if: ${{ env.DEBUG == 'true' }}
        uses: raven-actions/debug@v1
        with:
          vars-context: ${{ toJson(vars) }}
          secrets-context: ${{ toJson(secrets) }}
          needs-context: ${{ toJson(needs) }}
          inputs-context: ${{ toJson(inputs) }}
          
      - name: 🔑 Get Token
        uses: wow-actions/use-app-token@v2
        id: get-token
        with:
          app_id: ${{ secrets.ORG_BOT_APP_ID }}
          private_key: ${{ secrets.ORG_BOT_PRIVATE_KEY }}
          fallback: ${{ github.token }}

      - name: ⤵️ Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.get-token.outputs.BOT_TOKEN }}
          fetch-depth: 0
          
      - name: 🔄️ Detect changes
        id: changes-test
        uses: tj-actions/changed-files@v41
        with:
          files: |
            src/**
            tests/**
            package.json
            package-lock.json
            .node-version
            jest.config.js
            tsconfig.json
            action.yml
            codecov.yml

      - name: 🔄️ Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          token: ${{ steps.get-token.outputs.BOT_TOKEN }}
          filters: |
            app:
              - 'src/**'
              - 'tests/**'
              - 'package.json'
              - 'package-lock.json'
              - '.node-version'
              - 'jest.config.js'
              - 'tsconfig.json'
              - 'action.yml'
              - 'codecov.yml'

      - name: 🚧 Setup Node
        if: ${{ steps.changes.outputs.app == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: 🔀 Install dependencies
        if: ${{ steps.changes.outputs.app == 'true' }}
        run: npm ci

      - name: 🏗️ Build
        if: ${{ steps.changes.outputs.app == 'true' }}
        run: npm run build:ci

      - name: 🧪 Test
        if: ${{ steps.changes.outputs.app == 'true' }}
        run: npm run test:ci:cov
        continue-on-error: true

      - name: 📤 Upload test results
        if: ${{ steps.changes.outputs.app == 'true' && matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: 'reports/jest-*.xml'
          if-no-files-found: warn

      - name: 📤 Upload coverage results
        if: ${{ steps.changes.outputs.app == 'true' && matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-results
          path: coverage
          if-no-files-found: warn

      - name: 📜 Test report
        if: ${{ steps.changes.outputs.app == 'true' && matrix.os == 'ubuntu-latest' }}
        uses: phoenix-actions/test-reporting@v12
        with:
          token: ${{ steps.get-token.outputs.BOT_TOKEN }}
          name: 📜 Test report
          path: 'reports/jest-*.xml'
          reporter: jest-junit
          output-to: step-summary

      - name: 📜 Coverage report
        if: ${{ steps.changes.outputs.app == 'true' && matrix.os == 'ubuntu-latest' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/cobertura-coverage.xml
